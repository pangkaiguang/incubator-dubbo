<!--
  容器模块：是一个 Standlone 的容器，以简单的 Main 加载 Spring 启动，因为服务通常不需要 Tomcat/JBoss 等 Web 容器的特性，没必要用 Web 容器去加载服务。
  dubbo-container-api ：定义了 com.alibaba.dubbo.container.Container 接口，并提供 加载所有容器启动的 Main 类。
    实现 dubbo-container-api
    dubbo-container-spring ，提供了 com.alibaba.dubbo.container.spring.SpringContainer 。
    dubbo-container-log4j ，提供了 com.alibaba.dubbo.container.log4j.Log4jContainer 。
    dubbo-container-logback ，提供了 com.alibaba.dubbo.container.logback.LogbackContainer 。
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.apache.dubbo</groupId>
        <artifactId>dubbo-parent</artifactId>
        <version>2.7.0-SNAPSHOT</version>
    </parent>
    <artifactId>dubbo-container</artifactId>
    <packaging>pom</packaging>
    <name>${project.artifactId}</name>
    <description>The container module of dubbo project</description>
    <properties>
        <skip_maven_deploy>false</skip_maven_deploy>
    </properties>
    <modules>
        <module>dubbo-container-api</module>
        <module>dubbo-container-spring</module>
        <module>dubbo-container-log4j</module>
        <module>dubbo-container-logback</module>
    </modules>
</project>
